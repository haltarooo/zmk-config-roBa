#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &mt LEFT_SHIFT E  &mt LEFT_COMMAND R  &mt LEFT_ALT T                                      &kp Y        &kp U  &lt 5 I    &kp O    &lt 1 P
&kp A             &kp S         &kp D             &kp F               &kp G           &sl 3                &bt BT_CLR     &kp H        &kp J  &kp K      &kp L    &kp SQT
&mt LEFT_SHIFT Z  &kp X         &kp C             &kp V               &kp B           &kp COLON            &bt BT_SEL 0   &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT      &kp LC(SPACE)       &lt 1 SPACE     &lt 5 LC(SPACE)      &kp BACKSPACE  &lt 2 ENTER                             &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        charactors {
            bindings = <
&kp ESCAPE       &kp LEFT_CONTROL  &kp LEFT_SHIFT  &kp LEFT_COMMAND      &kp LEFT_ALT                                &kp TAB             &kp F2                  &kp UP_ARROW          &kp F4                   &kp F7
&kp EXCLAMATION  &kp LS(QUESTION)  &kp AMPERSAND   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans      &kp F13  &kp Q               &kp LEFT_ARROW          &kp DOWN_ARROW        &kp RIGHT_ARROW          &kp UNDER
&kp PLUS         &kp DOLLAR        &kp AT_SIGN     &kp HASH              &kp DOUBLE_QUOTES      &trans      &trans   &kp LC(LEFT_ARROW)  &kp LC(LA(LEFT_ARROW))  &kp LC(LA(UP_ARROW))  &kp LC(LA(RIGHT_ARROW))  &kp LC(RIGHT_ARROW)
&kp LEFT_SHIFT   &kp LEFT_COMMAND  &kp LEFT_ALT    &trans                &trans                 &trans      &trans   &trans                                                                                     &kp F12
            >;
        };

        NUM {
            bindings = <
&kp LA(TAB)                 &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS                                                   &kp CARET         &kp AMPERSAND      &kp TILDE       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp SLASH                   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp EXCLAMATION   &kp AT_SIGN        &kp HASH        &kp DOLLAR            &kp PERCENT
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD    &kp EQUAL                    &trans          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp BACKSLASH
&trans                      &kp KP_NUMBER_0  &trans           &trans           &trans        &trans                       &trans          &trans                                                                     &kp PIPE
            >;
        };

        Functions {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &kp LG(Z)             &kp LG(X)             &kp LG(C)  &kp LG(V)       &kp LG(I)
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &kp LS(LG(NUMBER_3))  &kp LS(LG(NUMBER_4))  &kp LA(Y)  &kp LA(V)       &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &kp LS(COMMA)         &kp LS(COMMA)         &trans     &kp LS(PERIOD)  &kp LS(PERIOD)
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                                                                 &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &mkp MB1  &mkp MB1  &trans    &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans    &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans    &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                  &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &kp LEFT_COMMAND  &kp LEFT_ALT                      &trans  &trans  &trans  &trans  &trans
&trans  &trans            &trans          &trans            &trans        &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans            &trans          &trans            &trans        &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans            &trans          &trans            &trans        &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
